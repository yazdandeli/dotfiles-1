{"version":3,"sources":["out-vscode/vs/workbench/services/extensions/worker/extensionHostWorkerMain.js"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n(function () {\n    var _a;\n    let MonacoEnvironment = self.MonacoEnvironment;\n    let monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../../../';\n    const trustedTypesPolicy = (_a = self.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('amdLoader', { createScriptURL: value => value });\n    if (typeof self.define !== 'function' || !self.define.amd) {\n        let loaderSrc = monacoBaseUrl + 'vs/loader.js';\n        if (trustedTypesPolicy) {\n            loaderSrc = trustedTypesPolicy.createScriptURL(loaderSrc);\n        }\n        importScripts(loaderSrc);\n    }\n    require.config({\n        baseUrl: monacoBaseUrl,\n        catchError: true,\n        trustedTypesPolicy\n    });\n    require(['vs/workbench/services/extensions/worker/extensionHostWorker'], () => { }, err => console.error(err));\n})();\n//# sourceMappingURL=extensionHostWorkerMain.js.map"],"mappings":"aAKA,AAAC,YACG,GAAI,GACJ,GAAI,GAAoB,KAAK,kBACzB,EAAgB,GAAqB,EAAkB,QAAU,EAAkB,QAAU,kBACjG,KAAM,GAAsB,GAAK,KAAK,gBAAkB,MAAQ,IAAO,OAAS,OAAS,EAAG,aAAa,YAAa,CAAE,gBAAiB,GAAS,IAClJ,GAAI,MAAO,MAAK,QAAW,YAAc,CAAC,KAAK,OAAO,KAClD,GAAI,GAAY,EAAgB,eAChC,AAAI,GACA,GAAY,EAAmB,gBAAgB,IAEnD,cAAc,GAElB,QAAQ,OAAO,CACX,QAAS,EACT,WAAY,GACZ,uBAEJ,QAAQ,CAAC,+DAAgE,OAAW,GAAO,QAAQ,MAAM","names":[],"file":"extensionHostWorkerMain.js"}